#from django.conf import settings
#from django.core.mail import send_mail
#from django.http import HttpResponse
#from django.shortcuts import render, get_object_or_404
#
#
#def home(request):
#    title = 'Зарегистрироваться'
#    ##form = sing_up_form(request.POST or None)
#    context = {
#        "title": title,
#        "form": form
#    }
#
#    if form.is_valid():
#        instance = form.save(commit=False)
#
#        full_name = form.cleaned_data.get("full_name")
#        if not full_name:
#            full_name = "New full name"
#        instance.full_name = full_name
#        instance.save()
#        context = {
#            "title": "Thank you"
#        }
#
#        if request.user.is_authenticated11() and request.user.is_staff:
#            queryset = singup.objects.all()
#            context = {
#                "queryset": queryset
#            }
#
#    return render(request, 'home.html', context)
#
#
#def contact(request):
#    title = 'Contact Us'
#    title_align_center = True
#    form = Contact_form(request.POST or None)
#    if form.is_valid():
#        # for key in form.cleaned_data:
#        #    print(key)
#
#        form_full_name = form.cleaned_data.get("full_name")
#        form_email = form.cleaned_data.get("email")
#        form_message = form.cleaned_data.get("message")
#        # print(email, message, full_name)
#        subject = 'Site contact form'
#        from_email = settings.EMAIL_HOST_USER
#        to_email = [from_email, 'youotheremail@gmail.com']
#        contact_message = "%s: %s via %s" % (
#            form_full_name,
#            form_email,
#            form_message
#        )
#        some_html_message = """
#        <h1>hello</h1>
#        """
#        send_mail(subject,
#                  contact_message,
#                  from_email,
#                  [to_email],
#                  html_message=some_html_message,
#                  fail_silently=True)
#
#    context = {
#        "form": form,
#        "title": title,
#        "title_align_center": title_align_center,
#    }
#    return render(request, "forms.html", context)
#
#
#def about(request):
#    return render(request, 'about.html', {})
"""
Django settings for TryDjango42 project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
#https://docs.djangoproject.com/en/1.10/topics/settings/
#
#For the full list of settings and their values, see
#https://docs.djangoproject.com/en/1.10/ref/settings/
#"""
#
#import os
#
## Build paths inside the project like this: os.path.join(BASE_DIR, ...)
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#
#
## Quick-start development settings - unsuitable for production
## See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/
#
## SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = '$hvj8ov8@ja$wp-@@y_dz0d!gb)s4_!2j#1sqq%p-^^&=$h^1p'
#
## SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
#
#ALLOWED_HOSTS = []#
#
#EMAIL_HOST = 'smtp.gmail.com'
#EMAIL_HOST_USER = 'yourgmail@gmail.com'
#EMAIL_HOST_PASSWORD = 'yourpassword'
#EMAIL_PORT = 587
#EMAIL_USE_TLS = True
#
#
## Application definition
#
#INSTALLED_APPS = [
#    'django.contrib.admin',
#    'django.contrib.auth',
#    'django.contrib.contenttypes',
#    'django.contrib.sessions',
#    'django.contrib.sites',
#    'django.contrib.messages',
#    'django.contrib.staticfiles',
#    'crispy_forms',
#    'registration',
#    'trydjango',
#]
#
#MIDDLEWARE_CLASSES = [
#    'django.middleware.security.SecurityMiddleware',
#    'django.contrib.sessions.middleware.SessionMiddleware',
#    'django.middleware.common.CommonMiddleware',
#    'django.middleware.csrf.CsrfViewMiddleware',
#    'django.contrib.auth.middleware.AuthenticationMiddleware',
#    'django.contrib.messages.middleware.MessageMiddleware',
#    'django.middleware.clickjacking.XFrameOptionsMiddleware',
#    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',#
#]
#
#ROOT_URLCONF = 'TryDjango42.urls'
#
#TEMPLATES = [
#    {
#        'BACKEND': 'django.template.backends.django.DjangoTemplates',
#        'DIRS': [os.path.join(BASE_DIR, 'trydjango/templates')]
#        ,
#        'APP_DIRS': True,
#        'OPTIONS': {
#            'context_processors': [
#                'django.template.context_processors.debug',
#                'django.template.context_processors.request',
#                'django.contrib.auth.context_processors.auth',
#                'django.contrib.messages.context_processors.messages',
#            ],
#        },
#    },
#]
#
#WSGI_APPLICATION = 'TryDjango42.wsgi.application'
##gfdgf
#
## Database
## https://docs.djangoproject.com/en/1.10/ref/settings/#databases
##TryDjango42
#
#DATABASES = {
#    'default': {
#    'ENGINE': 'django.db.backends.postgresql_psycopg2',
#    'NAME': 'TryDjango42',
#    'USER': 'postgres',
#    'PASSWORD': 'admin',
#    'HOST': '', # Set to empty string for localhost.
#    'PORT': '', # Set to empty string for default.
#    }
#}
#
#
## Password validation
## https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators
#
#AUTH_PASSWORD_VALIDATORS = [
#    {
#        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#    },
#    {
#        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#    },
#    {
#        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#    },
#    {
#        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#    },
#]
#
#
## Internationalization
## https://docs.djangoproject.com/en/1.10/topics/i18n/
#
#LANGUAGE_CODE = 'ru-ru'
#
#TIME_ZONE = 'UTC'
#
#USE_I18N = True
#
#USE_L10N = True
#
#USE_TZ = True
#
#
## Static files (CSS, JavaScript, Images)
## https://docs.djangoproject.com/en/1.10/howto/static-files/
#
#STATIC_URL = '/static/'
#
#STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static/static_in_env", "static_root")
#
#STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, "static/static_in_pro", "our_static"),
#    #os.path.join(BASE_DIR, "static/static_in_env"),
#    #'/var/www/static/',
#]
#
#MEDIA_URL = '/media/'
#MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static/static_in_env", "media_root")
#
#
#
#CRISPY_TEMPLATE_PACK = 'bootstrap3'
#
#
#ACCOUNT_ACTIVATION_DAYS = 7
#REGISTRATION_AUTO_LOGIN =True
#SITE_ID = 1
#LOGIN_REDIRECT_URL = '/'